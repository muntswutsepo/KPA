// <auto-generated />
using System;
using KPAWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KPAWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KPAWeb.Models.KPA", b =>
                {
                    b.Property<int>("KPA_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KPA_No"));

                    b.Property<string>("KPA_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weighting")
                        .HasColumnType("int");

                    b.HasKey("KPA_No");

                    b.ToTable("KPAs");
                });

            modelBuilder.Entity("KPAWeb.Models.KPI", b =>
                {
                    b.Property<int>("KPI_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KPI_No"));

                    b.Property<int>("KPA_Ref_No")
                        .HasColumnType("int");

                    b.Property<string>("KPI_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_Weight")
                        .HasColumnType("int");

                    b.Property<int>("Weighting")
                        .HasColumnType("int");

                    b.HasKey("KPI_No");

                    b.HasIndex("KPA_Ref_No");

                    b.ToTable("KPIs");
                });

            modelBuilder.Entity("KPAWeb.Models.KPIEvidence", b =>
                {
                    b.Property<int>("Evidence_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Evidence_No"));

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Final_Score")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("(cast([Weighting] as float) / 100) * cast([Line_Manager_Score] as Float)");

                    b.Property<int>("KPI_Ref_No")
                        .HasColumnType("int");

                    b.Property<int>("Line_Manager_Score")
                        .HasColumnType("int");

                    b.Property<string>("Months")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("No_Of_Days")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("DateDiff(dd, [Start_Date], [End_Date])");

                    b.Property<int>("Own_Score")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Weighting")
                        .HasColumnType("int");

                    b.HasKey("Evidence_No");

                    b.HasIndex("KPI_Ref_No");

                    b.ToTable("KPIEvidences");
                });

            modelBuilder.Entity("KPAWeb.Models.KPI", b =>
                {
                    b.HasOne("KPAWeb.Models.KPA", "KPA")
                        .WithMany("KPIs")
                        .HasForeignKey("KPA_Ref_No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KPA");
                });

            modelBuilder.Entity("KPAWeb.Models.KPIEvidence", b =>
                {
                    b.HasOne("KPAWeb.Models.KPI", "KPI")
                        .WithMany("KPIEvidences")
                        .HasForeignKey("KPI_Ref_No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KPI");
                });

            modelBuilder.Entity("KPAWeb.Models.KPA", b =>
                {
                    b.Navigation("KPIs");
                });

            modelBuilder.Entity("KPAWeb.Models.KPI", b =>
                {
                    b.Navigation("KPIEvidences");
                });
#pragma warning restore 612, 618
        }
    }
}
